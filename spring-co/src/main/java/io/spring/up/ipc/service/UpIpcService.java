// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: zero.def.service.proto

package io.spring.up.ipc.service;

public final class UpIpcService {
  private UpIpcService() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026zero.def.service.proto\022\030io.spring.up.i" +
      "pc.service\032\022zero.envelop.proto\032\021zero.str" +
      "eam.proto2}\n\016ConsumeService\022k\n\nOutputCal" +
      "l\022+.io.spring.up.ipc.model.StreamServerR" +
      "equest\032,.io.spring.up.ipc.model.StreamSe" +
      "rverResponse(\0010\0012|\n\016ProduceService\022j\n\tIn" +
      "putCall\022+.io.spring.up.ipc.model.StreamC" +
      "lientRequest\032,.io.spring.up.ipc.model.St" +
      "reamClientResponse(\0010\0012d\n\014UnityService\022T" +
      "\n\tUnityCall\022\".io.spring.up.ipc.model.Ipc" +
      "Request\032#.io.spring.up.ipc.model.IpcResp" +
      "onse2~\n\016DupliexService\022l\n\013DupliexCall\022+." +
      "io.spring.up.ipc.model.StreamClientReque" +
      "st\032,.io.spring.up.ipc.model.StreamServer" +
      "Response(\0010\001B*\n\030io.spring.up.ipc.service" +
      "B\014UpIpcServiceP\001b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          io.spring.up.ipc.model.UpEnvelop.getDescriptor(),
          io.spring.up.ipc.model.UpStream.getDescriptor(),
        });
    io.spring.up.ipc.model.UpEnvelop.getDescriptor();
    io.spring.up.ipc.model.UpStream.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
